<script type="text/javascript">
    // Debounce function
    function debounce(func, wait, immediate) {
        var timeout;
        return function() {
            var context = this, args = arguments;
            var later = function() {
                timeout = null;
                if (!immediate) func.apply(context, args);
            };
            var callNow = immediate && !timeout;
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
            if (callNow) func.apply(context, args);
        };
    };

    // Linkify comments, only if not already done
    function linkifyComments() {
        var comments = document.querySelectorAll('td.comment-cell:not(.linkified)');

        comments.forEach(function(comment) {
            var html = comment.innerHTML;
            var linkedHtml = html.replace(/(https?:\/\/\S+)/g, '<a href="$1" target="_blank">$1</a>');
            comment.innerHTML = linkedHtml;
            comment.classList.add('linkified');
        });
    }

    // Colorfy order statuses, only if not already done
    function colorfyOrderStatuses() {
        var comments = document.querySelectorAll('td.order-status:not(.colorfied)');

        comments.forEach(function(comment) {
            var statusText = comment.textContent.trim();

            // Determine color based on order status
            var color;
            var fontWeight = 'normal'
            switch (statusText.toLowerCase()) {
                case 'New':
                    color = 'black';
                    fontWeight = 'bold';
                    break;
                case 'Pack':
                    color = 'blue';
                    break;
                case 'Despatched':
                    color = 'green';
                    break;
                case 'Pending Pickup':
                    color = 'orange';
                    fontWeight = 'bold';
                    break;
                case 'Sent on Account':
                    color = 'red';
                    break;
                default:
                    color = '';
            }

            // Apply the color and mark as colorfied
            if (color != '') {
            comment.style.color = color;
            }
            comment.style.fontWeight = fontWeight;
            comment.classList.add('colorfied');
        });
    }

    // Debounced version of linkifyComments
    var debouncedLinkifyComments = debounce(linkifyComments, 250);

    var debouncedColorfyOrderStatuses = debounce(colorfyOrderStatuses, 250);

    // Mutation Observer to observe changes in the DOM
    function observeDOMChanges() {
        var targetNode = document.getElementById('history');

        if (!targetNode) {
            console.error('Target node for Mutation Observer not found');
            return;
        }

        const observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                if (mutation.addedNodes.length) {
                    debouncedLinkifyComments();
                }
            });
        });

        observer.observe(targetNode, { childList: true, subtree: true });
    }

    // Start observing when DOM is fully loaded
    document.addEventListener('DOMContentLoaded', function() {
        observeDOMChanges();
    });
</script>
<footer id="footer">{{ text_footer }}<br/>{{ text_version }}<br><a href="https://nbembedded.com">nbembedded.com</a></footer></div>
</body></html>
